{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handlerDocumentKeyUp","event","setState","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAaEC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,wBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,wBAV/C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAG,mCAC0BA,EAD1B,KAGF,kCA1BZ,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.cdc4e077.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.PureComponent {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerDocumentKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerDocumentKeyUp);\n  }\n\n  handlerDocumentKeyUp = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key ? (\n            `The last pressed key is [${key}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}